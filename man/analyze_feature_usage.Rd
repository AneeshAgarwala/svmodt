% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svmodt_feature_selection_analyzer.R
\name{analyze_feature_usage}
\alias{analyze_feature_usage}
\title{Analyze feature usage across a decision tree}
\usage{
analyze_feature_usage(tree, all_features = NULL)
}
\arguments{
\item{tree}{A decision tree object. Each node may contain:
\itemize{
  \item \code{is_leaf} – logical; \code{TRUE} if the node is a leaf.
  \item \code{features} – character vector of features used at that node.
  \item \code{left}, \code{right} – child node objects.
  \item \code{penalty_applied} – logical; indicates whether a penalty was applied.
}}

\item{all_features}{Optional character vector listing all features in the dataset.
If not supplied, the set of features is automatically inferred using
\code{\link{get_all_features_from_tree}}.}
}
\value{
A list containing:
  \itemize{
    \item \code{by_depth} – a list showing which features were used at each tree depth.
    \item \code{total_usage} – a named numeric vector with feature usage counts.
    \item \code{diversity_score} – a numeric value representing the entropy-based
      diversity of feature usage. Higher scores indicate more evenly distributed
      feature usage, while lower scores suggest dominance by a few features.
    \item \code{penalty_effectiveness} – a list of depths where penalties were applied.
  }
}
\description{
Provides a detailed summary of how features are used throughout a decision tree,
including usage frequency, depth-wise distribution, feature diversity, and any
penalty effects. This function helps assess how balanced or biased the tree is
toward certain features.
}
\details{
The **diversity score** quantifies how evenly features are used across the tree using
Shannon entropy:

\deqn{D = -\sum_i p_i \log(p_i)}

where \eqn{p_i} is the proportion of times feature \eqn{i} is used in all splits.
- A **higher score** means the model uses features more uniformly (greater diversity).
- A **lower score** means a few features dominate the tree’s splits.

This metric provides insight into feature balance and can help identify potential
over-reliance on specific predictors.

analyze_feature_usage(tree)
}
\keyword{internal}

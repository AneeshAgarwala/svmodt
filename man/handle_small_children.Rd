% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svmodt_handle_children.R
\name{handle_small_children}
\alias{handle_small_children}
\title{Handle small child nodes in tree splitting}
\usage{
handle_small_children(
  left_idx,
  right_idx,
  min_samples,
  data,
  response,
  depth,
  max_depth,
  max_features,
  feature_method,
  max_features_strategy,
  max_features_decrease_rate,
  max_features_random_range,
  penalize_used_features,
  feature_penalty_weight,
  used_features,
  class_weights,
  custom_class_weights,
  features,
  scaler,
  all_classes,
  verbose,
  ...
)
}
\arguments{
\item{left_idx}{Indices of samples assigned to the left child.}

\item{right_idx}{Indices of samples assigned to the right child.}

\item{min_samples}{Minimum number of samples required for a node to be valid.}

\item{data}{The full dataset being split.}

\item{response}{Name of the response variable.}

\item{depth}{Current depth of the node.}

\item{max_depth}{Maximum allowed depth for the tree.}

\item{max_features}{Maximum number of features to consider at each split.}

\item{feature_method}{Feature selection method (e.g., "random", "cor", "mutual").}

\item{max_features_strategy}{Strategy for dynamic feature selection ("constant", "decrease", "random").}

\item{max_features_decrease_rate}{Numeric; factor controlling feature decrease with depth.}

\item{max_features_random_range}{Numeric vector of length 2 specifying min/max proportion for random features.}

\item{penalize_used_features}{Logical; whether to penalize previously used features.}

\item{feature_penalty_weight}{Numeric weight for penalizing used features.}

\item{used_features}{Character vector of features used in ancestor nodes.}

\item{class_weights}{Named numeric vector of class weights.}

\item{custom_class_weights}{Optional custom class weights.}

\item{features}{Character vector of features used at this node.}

\item{scaler}{Optional scaler applied to features at this node.}

\item{all_classes}{Character vector of all possible classes.}

\item{verbose}{Logical; if TRUE, prints messages for debugging.}

\item{...}{Additional arguments passed to \code{svm_split}.}
}
\value{
A list with components:
\itemize{
  \item \code{stop} Logical; \code{TRUE} if splitting should stop at this node.
  \item \code{node} Either a leaf node object (if stopping) or a partially built
        internal node with only one child (if one child is too small).
}
}
\description{
Internal helper function to handle situations where one or both child nodes
resulting from a split have fewer samples than \code{min_samples}. Depending on
which child is too small, it may stop splitting, create only one child, or
return a flag to continue normal processing.
}
\details{
- If both children are smaller than \code{min_samples}, a leaf node is created.
- If only one child is too small, the other child is recursively split.
- This function ensures that tree nodes respect the minimum sample requirement,
  avoiding invalid splits that could destabilize the SVM-based tree.
}
\keyword{internal}
